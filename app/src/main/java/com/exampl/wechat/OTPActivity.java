
package com.exampl.wechat;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;


import androidx.annotation.NonNull;

import android.app.ProgressDialog;
import android.content.Intent;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Toast;

import com.exampl.weChat.databinding.ActivityOtpactivityBinding;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;
import com.google.firebase.database.FirebaseDatabase;

import java.util.concurrent.TimeUnit;

public class OTPActivity extends AppCompatActivity {
    ActivityOtpactivityBinding binding;
    FirebaseAuth auth;
    String verificationId;
    ProgressDialog pd;
    String getOTPBackend;
    String phoneNumber;
FirebaseDatabase database ;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityOtpactivityBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        auth = FirebaseAuth.getInstance();
        database=FirebaseDatabase.getInstance();
        binding.otpView1.requestFocus();

        phoneNumber = getIntent().getStringExtra("phoneNumber");
        binding.phoneLabel.setText(phoneNumber);


//this is the otp generated by the firebase that we have passed throught intent
//        intent form PhoneNumber Activity
        getOTPBackend = getIntent().getStringExtra("backendOTP");

        binding.SubmitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (!binding.otpView1.getText().toString().trim().isEmpty() && !binding.otpView2.getText().toString().trim().isEmpty() && !binding.otpView3.getText().toString().trim().isEmpty() && !binding.otpView4.getText().toString().trim().isEmpty() && !binding.otpView5.getText().toString().trim().isEmpty() && !binding.otpView6.getText().toString().trim().isEmpty()) {
//to get the string numbers enter by user
                    String code_by_user = binding.otpView1.getText().toString() +
                            binding.otpView2.getText().toString() +
                            binding.otpView3.getText().toString() +
                            binding.otpView4.getText().toString() +
                            binding.otpView5.getText().toString() +
                            binding.otpView6.getText().toString();

                    if (getOTPBackend != null) {
//to add the progress bar
                        binding.progressbarSendingOTP.setVisibility(View.VISIBLE);
//                to check the code entered by user issame as Firebase generated

//                        to link the USER with the Previous credentials and with the new one we need to use
//                        LINK WITH CREDENTIALS and keep in mind not to SIGN IN the user SECOND TIME
//                        just  get the credentials
                        PhoneAuthCredential phoneAuthCredential = PhoneAuthProvider.getCredential(getOTPBackend, code_by_user);

                        auth.getCurrentUser().linkWithCredential(phoneAuthCredential)
                                .addOnCompleteListener( OTPActivity.this, new OnCompleteListener<AuthResult>() {
                                    @Override
                                    public void onComplete(@NonNull Task<AuthResult> task) {
                                        if (task.isSuccessful()) {
                                            FirebaseUser user = task.getResult().getUser();
                                            updateUI(user);
//                                            to update the database also
                                            String id = task.getResult().getUser().getUid();
//                                           contact updated in  databse
                                            database.getReference().child("users").child(id)
                                                    .child("contact").setValue(phoneNumber);

//                                            database.getReference().child("contactBook").child(auth.getUid()).child("contact").setValue(phoneNumber);


                                        } else {
                                            Toast.makeText(OTPActivity.this, "Authentication failed\nAlready Registered.",
                                                    Toast.LENGTH_SHORT).show();
                                            updateUI(null);
                                        }
                                    }
                                });




                    } else {
                        Toast.makeText(OTPActivity.this, "Please check Internet Connection", Toast.LENGTH_SHORT).show();

                    }
//                    Toast.makeText(OTPActivity.this, "OTP VERIFY", Toast.LENGTH_SHORT).show();

                } else {
                    Toast.makeText(OTPActivity.this, "Please Enter OTP Correctly", Toast.LENGTH_SHORT).show();
                }
            }
        });
        // method to move the cursor over the edittext and is a userdefined method
        numberOTPMove();

//        to resend the otp
        binding.resendButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                PhoneAuthProvider.getInstance().verifyPhoneNumber(
                        "+91" + getIntent().getStringExtra("phoneNumber"),
                        60,
                        TimeUnit.SECONDS,
                        OTPActivity.this,
                        new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
                            @Override
                            public void onVerificationCompleted(@NonNull PhoneAuthCredential phoneAuthCredential) {
                            }

                            @Override
                            public void onVerificationFailed(@NonNull FirebaseException e) {
//
//                                   to locate the error in the Toast use e.getmessage
                                Toast.makeText(OTPActivity.this, e.getMessage(), Toast.LENGTH_SHORT).show();
                            }

                            @Override
                            public void onCodeSent(@NonNull String NEWbackendOTP, @NonNull PhoneAuthProvider.ForceResendingToken forceResendingToken) {
                                getOTPBackend = NEWbackendOTP;
                                Toast.makeText(OTPActivity.this, "OTP sent Successfully", Toast.LENGTH_SHORT).show();
                            }
                        }
                );

            }
        });

    }

    //Change UI according to user data.
    public void updateUI(FirebaseUser account){

        if(account != null){
            Toast.makeText(this,"You Signed In successfully",Toast.LENGTH_LONG).show();
            startActivity(new Intent(this,MainActivity.class));

        }else {
            Toast.makeText(this,"You Didnt signed in",Toast.LENGTH_LONG).show();
        }

    }


//    //    to link the user
//    public void verifyAuthentication(PhoneAuthCredential credential) {
//        auth.getCurrentUser().linkWithCredential(credential).addOnSuccessListener(new OnSuccessListener<AuthResult>() {
//            @Override
//            public void onSuccess(AuthResult authResult) {
//                Toast.makeText(OTPActivity.this, "Account created And Linked", Toast.LENGTH_SHORT).show();
////            pass intent to MAin Activity
//                Intent intent = new Intent(OTPActivity.this, MainActivity.class);
//                startActivity(intent);
//                finish();
//
//            }
//        });
//
//    }


    //    method to move the curson text form one edittext to another
//    we have added    these two code in xml edit text to move the cursor
//    android:imeOptions="actionNext"
//    android:importantForAutofill="no"
    private void numberOTPMove() {

//        add this to all the edit text to move this cursor //expand to see the code
        binding.otpView1.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
//request focus is used to move the cursor form one edit text to another
                if (!s.toString().trim().isEmpty()) {
                    binding.otpView2.requestFocus();
                }
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        binding.otpView2.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
//request focus is used to move the cursor form one edit text to another
                if (!s.toString().trim().isEmpty()) {
                    binding.otpView3.requestFocus();
                }
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        binding.otpView3.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
//request focus is used to move the cursor form one edit text to another
                if (!s.toString().trim().isEmpty()) {
                    binding.otpView4.requestFocus();
                }
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        binding.otpView4.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
//request focus is used to move the cursor form one edit text to another
                if (!s.toString().trim().isEmpty()) {
                    binding.otpView5.requestFocus();
                }
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        binding.otpView5.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
//request focus is used to move the cursor form one edit text to another
                if (!s.toString().trim().isEmpty()) {
                    binding.otpView6.requestFocus();
                }
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });

//        in the method we write  the edittext next to move the cursor to that field

    }
}